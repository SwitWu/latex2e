This is a generated file for the l3build validation system.
Don't change this file in any respect.
==> @endpe=false on input line ...
==> increment P on input line ...
-----------------------------------
Math env equation*
0 \xleftarrow [\zeta ]{} F \times \Delta (n - 1) \xrightarrow {\partial _0 \alpha (b)} E^{\partial _0 b}
====>first-result=macro:->0 \xleftarrow [\zeta ]{} F \times \Delta (n - 1) \xrightarrow {\partial _0 \alpha (b)} E^{\partial _0 b}
====>first-tmpmathcontent=macro:->
====>formula has no subparts
==> flattened=false on input line ...
==> Structure-end text-unit after displayblock on input line ...
==> @endpe=false on input line ...
==> increment P on input line ...
-----------------------------------
Math env align*
u & \equiv v + 1 \mod {n^2} \\ u & \equiv v + 1 \bmod {n^2} \\ u & = v + 1 \pmod {n^2} \\ u & = v + 1 \pod {n^2}
====>first-result=macro:->u & \equiv v + 1 \mod {n^2} 
====>first-tmpmathcontent=macro:-> u & \equiv v + 1 \bmod {n^2} \\ u & = v + 1 \pmod {n^2} \\ u & = v + 1 \pod {n^2}
====>formula has subparts
====>result=macro:-> u & \equiv v + 1 \bmod {n^2} 
====>tmpmathcontent=macro:-> u & = v + 1 \pmod {n^2} \\ u & = v + 1 \pod {n^2}
====>result=macro:-> u & = v + 1 \pmod {n^2} 
====>tmpmathcontent=macro:-> u & = v + 1 \pod {n^2}
====>result=macro:-> u & = v + 1 \pod {n^2}
====>tmpmathcontent=macro:->
==> @endpe=true on input line ...
==> increment P on input line ...
-----------------------------------
Math env math
u = v + 1 \pmod {n^2}
====>first-result=macro:->u = v + 1 \pmod {n^2}
====>first-tmpmathcontent=macro:->
====>formula has no subparts
==> increment /P on input line ...
==> @endpe=false on input line ...
==> increment P on input line ...
-----------------------------------
Math env gather
A \xLeftarrow {\ x} B \xRightarrow [y\ ]{} C \xLeftrightarrow [y]{\ x\ } D \\ A \xhookleftarrow {x} B \xhookrightarrow [bbb]{a} C \\ \xleftharpoondown {} \xleftharpoonup {} \xleftrightharpoons {xxx} \xrightleftharpoons [yy]{} \xrightharpoondown {} \xrightharpoonup {} \\ \xmapsto {x>0} A \xleftrightarrow [\text {letters}]{} Z
====>first-result=macro:->A \xLeftarrow {\ x} B \xRightarrow [y\ ]{} C \xLeftrightarrow [y]{\ x\ } D 
====>first-tmpmathcontent=macro:-> A \xhookleftarrow {x} B \xhookrightarrow [bbb]{a} C \\ \xleftharpoondown {} \xleftharpoonup {} \xleftrightharpoons {xxx} \xrightleftharpoons [yy]{} \xrightharpoondown {} \xrightharpoonup {} \\ \xmapsto {x>0} A \xleftrightarrow [\text {letters}]{} Z
====>formula has subparts
====>result=macro:-> A \xhookleftarrow {x} B \xhookrightarrow [bbb]{a} C 
====>tmpmathcontent=macro:-> \xleftharpoondown {} \xleftharpoonup {} \xleftrightharpoons {xxx} \xrightleftharpoons [yy]{} \xrightharpoondown {} \xrightharpoonup {} \\ \xmapsto {x>0} A \xleftrightarrow [\text {letters}]{} Z
====>result=macro:-> \xleftharpoondown {} \xleftharpoonup {} \xleftrightharpoons {xxx} \xrightleftharpoons [yy]{} \xrightharpoondown {} \xrightharpoonup {} 
====>tmpmathcontent=macro:-> \xmapsto {x>0} A \xleftrightarrow [\text {letters}]{} Z
====>result=macro:-> \xmapsto {x>0} A \xleftrightarrow [\text {letters}]{} Z
====>tmpmathcontent=macro:->
==> flattened=false on input line ...
==> Structure-end text-unit after displayblock on input line ...
==> @endpe=false on input line ...
==> increment P on input line ...
-----------------------------------
Math env gather*
\ropen {a,d}=\closed {a,b} + \lopen {b,c} + \dotsb \\[3pt] \open {\frac {a}{b}} \approx \open *{\frac {a}{b}} \neq \closed [\Bigg ]{x}
====>first-result=macro:->\ropen {a,d}=\closed {a,b} + \lopen {b,c} + \dotsb 
====>first-tmpmathcontent=macro:->[3pt] \open {\frac {a}{b}} \approx \open *{\frac {a}{b}} \neq \closed [\Bigg ]{x}
====>formula has subparts
====>result=macro:->[3pt] \open {\frac {a}{b}} \approx \open *{\frac {a}{b}} \neq \closed [\Bigg ]{x}
====>tmpmathcontent=macro:->
==> flattened=false on input line ...
==> Structure-end text-unit after displayblock on input line ...
==> @endpe=false on input line ...
==> increment P on input line ...
-----------------------------------
Math env equation*
\interval [open right]{a}{d} = \interval {a}{b} + \interval [open left]{b}{c} + \interval [open]{c}{e} - \interval [open right]{d}{e}
====>first-result=macro:->\interval [open right]{a}{d} = \interval {a}{b} + \interval [open left]{b}{c} + \interval [open]{c}{e} - \interval [open right]{d}{e}
====>first-tmpmathcontent=macro:->
====>formula has no subparts
==> flattened=false on input line ...
==> Structure-end text-unit after displayblock on input line ...
==> @endpe=false on input line ...
==> increment P on input line ...
-----------------------------------
Math env gather*
\ket {\psi }\bra {\phi } : \ket {\xi } \mapsto \ket {\psi } \braket {\psi |\xi } \\ \Braket { \phi | \frac {\partial ^2}{\partial t^2} | \psi } \\ \shortintertext {Also:} \Set { x\in \Re ^2 | 0 < |x| < 5 }
====>first-result=macro:->\ket {\psi }\bra {\phi } : \ket {\xi } \mapsto \ket {\psi } \braket {\psi |\xi } 
====>first-tmpmathcontent=macro:-> \Braket { \phi | \frac {\partial ^2}{\partial t^2} | \psi } \\ \shortintertext {Also:} \Set { x\in \Re ^2 | 0 < |x| < 5 }
====>formula has subparts
! Package amsmath Error: Invalid use of \shortintertext.
See the amsmath package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
l. ...\end{gather*}
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.
====>result=macro:-> \Braket { \phi | \frac {\partial ^2}{\partial t^2} | \psi } 
====>tmpmathcontent=macro:-> \shortintertext {Also:} \Set { x\in \Re ^2 | 0 < |x| < 5 }
====>result=macro:-> \shortintertext {Also:} \Set { x\in \Re ^2 | 0 < |x| < 5 }
====>tmpmathcontent=macro:->
! Package amsmath Error: Invalid use of \shortintertext.
See the amsmath package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
l. ...\end{gather*}
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.
==> flattened=false on input line ...
==> Structure-end text-unit after displayblock on input line ...
==> problem with shortintertext (also needs redefinition)
[1
] (mathcapture-012.aux)
