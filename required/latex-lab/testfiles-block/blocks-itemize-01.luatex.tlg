This is a generated file for the l3build validation system.
Don't change this file in any respect.
==> @endpe=false on input line ...
==> increment P on input line ...
==> itemize-env-start
==> use instance: list-1
==> increment /P on input line ...
==> use instance: itemize-1
==> template:list:std
==> template:list:std end
==> template:item:std
==> item everypar on input line ...
==> increment P on input line ...
==> center-env-start
==> use instance: displayblock-1
==> increment /P on input line ...
==> use para instance: center
==> @endpe=false on input line ...
==> increment P on input line ...
==> blockenv common ending on input line ...
==> increment /P on input line ...
==> @endpe=true on input line ...
==> increment P on input line ...
==> increment /P on input line ...
==> template:item:std
==> item everypar on input line ...
==> increment P on input line ...
==> increment /P on input line ...
==> template:item:std
==> item with optional
==> item everypar on input line ...
==> increment P on input line ...
==> increment /P on input line ...
==> template:item:std
==> item everypar on input line ...
==> increment P on input line ...
==> blockenv common ending on input line ...
==> increment /P on input line ...
==> flattened=false on input line ...
==> Structure-end text-unit after displayblock on input line ...
==> itemize-env-start
==> use instance: list-1
==> @endpe=false on input line ...
==> use instance: itemize-1
==> template:list:std
==> template:list:std end
==> template:item:std
==> item everypar on input line ...
==> increment P on input line ...
==> increment /P on input line ...
==> template:item:std
==> item everypar on input line ...
==> increment P on input line ...
==> increment /P on input line ...
==> template:item:std
==> item with optional
==> item everypar on input line ...
==> increment P on input line ...
==> itemize-env-start
==> use instance: list-2
==> increment /P on input line ...
==> use instance: itemize-2
==> template:list:std
==> template:list:std end
==> template:item:std
==> item everypar on input line ...
==> increment P on input line ...
==> itemize-env-start
==> use instance: list-3
==> increment /P on input line ...
==> use instance: itemize-3
==> template:list:std
==> template:list:std end
==> template:item:std
==> item everypar on input line ...
==> increment P on input line ...
==> itemize-env-start
==> use instance: list-4
==> increment /P on input line ...
==> use instance: itemize-4
==> template:list:std
==> template:list:std end
==> template:item:std
==> item everypar on input line ...
==> increment P on input line ...
==> blockenv common ending on input line ...
==> increment /P on input line ...
==> blockenv common ending on input line ...
==> Structure-end P at list-end on input line ...
==> blockenv common ending on input line ...
==> Structure-end P at list-end on input line ...
==> template:item:std
==> item everypar on input line ...
==> increment P on input line ...
==> increment /P on input line ...
==> template:item:std
==> itemize-env-start
==> use instance: list-2
==> @endpe=false on input line ...
==> use instance: itemize-2
==> template:list:std
==> template:list:std end
==> template:item:std
==> item everypar on input line ...
==> increment P on input line ...
==> increment /P on input line ...
==> template:item:std
==> item everypar on input line ...
==> increment P on input line ...
==> blockenv common ending on input line ...
==> increment /P on input line ...
==> blockenv common ending on input line ...
==> Structure-end P at list-end on input line ...
==> flattened=false on input line ...
==> Structure-end text-unit after displayblock on input line ...
[1
] (blocks-itemize-01.aux)
